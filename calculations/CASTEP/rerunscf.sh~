#!/bin/bash

ls -1 *cif > list
sed s/.cif//g list >> searcherrors
rm list


#this is the loop for choosing the input name from a list of names (mofs)
b=$( awk 'END{print NR}' searcherrors )
a="1"
while [ $a -le $b ]; do
  input=$(awk -v a=$a '{if(NR==a) print $0}' searcherrors)
  echo $input
  cd $input/geom
  squeue -n $input
  if grep  'Out Of Memory' slurm*
      then
      echo $input error = out of memory
        
      cd ../../
      
  elif grep 'LBFGS: Geometry optimization completed successfully.'  $input.castep
      then
      echo $input optimized
      echo ' '
      cd ../..
  elif grep 'max. SCF cycles performed but system has not reached the groundstate.' $input.castep
      then
      echo $input error = SCF not converged
      if grep 'elec_energy_tol   : 0.000000001' $input.param
      	then
      	ls -1 slurm* > list
      	sed s/'slurm-'//g list >> num1
      	sed s/.out//g num1 >> num2
      	c=$( awk 'END{print NR}' num2 )
      	d="1"
      	ID=$(awk -v d=$d '{if(NR==d) print $0}' num2)
      	scancel $ID
      	rm list
      	rm num1
      	rm num2
      	echo cancelled
      	echo .............
        echo ................
      	sed '9 s/500/1000/' $input.param > tmp
      	mv tmp $input.param
      	sed '8 s/0.000000001/0.0000001/' $input.param > tmp
      	mv tmp $input.param
      	sed 's/Overall parallel efficiency rating:/Geometry optimization completed successfully/' $input.sh > tmp
      	rm slurm*
        mv tmp $input.sh       
      	sbatch $input.sh
      	squeue -n $input
      	echo ' '
        cd ../../
      else
        echo $input scf not converged but already changed
        cd ../../
      fi
  elif grep 'Geometry optimization failed to converge after' $input.castep
      then
      if grep 'geom_max_iter : 200' $input.param
        then 
        echo $input error = optimisation not converged 
        ls -1 slurm* > list
        sed s/'slurm-'//g list >> num1
        sed s/.out//g num1 >> num2
        c=$( awk 'END{print NR}' num2 )
        d="1"
        ID=$(awk -v d=$d '{if(NR==d) print $0}' num2)
        scancel $ID
        rm list
        rm num1
        rm num2
        echo cancelled
        sed '16 s/200/500/' $input.param > tmp
        mv tmp $input.param
	sed '13 s/ 0.001/ 0.01/' $input.param > tmp
        mv tmp $input.param
        sed 's/Overall parallel efficiency rating:/Geometry optimization completed successfully/' $input.sh > tmp
        mv tmp $input.sh
        rm slurm*
        sbatch $input.sh
        squeue -n $input
        echo ' '
        cd ../../
      else
        echo $input geometry not converged but already changed
        cd ../../
      fi
   elif grep 'DUE TO TIME LIMIT ' slurm*
   then
  if grep 'continuation' $input.param
   then
  echo $input time limit, already rerun but rerun again
      sbatch $input.sh
      squeue -n $input
      rm slurm*
      echo ' '
      cd ../../
    else
      echo continuation : default > cont
      cat cont >> $input.param
      rm cont
      sed 's/Overall parallel efficiency rating:/Geometry optimization completed successfully/' $input.sh > tmp
      mv tmp $input.sh
      sed 's/ -gt 0 /-gt 1 /' $input.sh > tmp
      mv tmp $input.sh

      echo $input time limit, rerun
      sbatch $input.sh
      squeue -n $input
      rm slurm*
      echo ' ' 
      cd ../../
    fi
  else
      echo $input error unknown
      echo ' ' 
      cd ../..
  fi
a=$[$a+1]
#end of the loop for the input name
done
rm searcherrors



